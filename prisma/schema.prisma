// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
  password             String
  password_reset_token String?
  token_send_at        DateTime?
  email_verified_at    DateTime?
  email_verify_token   String?
  workspaces    Workspace[]
  members       Member[]
}

model Workspace {
  id          String    @id @default(cuid())
  name        String    
  joinCode    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt @default(now())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  members     Member[]
  channels    Channel[]
}

enum ChannelType {
  PUBLIC
  PRIVATE  
  ANNOUNCEMENT
}

model Channel {
  id          String      @id @default(cuid())
  name        String
  type        ChannelType @default(PUBLIC)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt @default(now())
  workspaceId String
  workspace   Workspace   @relation(fields: [workspaceId], references: [id])
  messages    Message[]
}

model Message {
  id          String    @id @default(cuid())
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt @default(now())
  channelId   String
  channel     Channel   @relation(fields: [channelId], references: [id])
}

enum Role {
  ADMIN
  MODERATOR
  MEMBER
}

model Member {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt @default(now())
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  role        Role
}
